services:
  db:
    image: postgres:17
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'

  redis:
    image: redis:latest
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  backend:
    build: ./backend
    restart: always
    depends_on:
      - db
      - redis
    env_file:
      - ./.env
    volumes:
      - ./backend:/app
      - media_volume:/app/media
    ports:
      - "8000:8000"
    command: python manage.py runserver 0.0.0.0:8000 --nothreading
    # User is already set in Dockerfile

  celery_worker:
    build: ./backend
    restart: always
    depends_on:
      - db
      - redis
      - backend
    env_file:
      - ./.env
    volumes:
      - ./backend:/app
      - media_volume:/app/media
    command: watchmedo auto-restart --directory=/app --pattern=*.py --recursive -- celery -A core worker -l INFO
    # Explicitly set UID for celery worker
  
  celery_beat:
    build: ./backend
    restart: always
    depends_on:
      - db
      - redis
      - backend
      - celery_worker
    env_file:
      - ./.env
    volumes:
      - celery_beat_data:/app/celerybeat
    command: celery -A core beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler

volumes:
  postgres_data:
  redis_data:
  celery_beat_data:
  media_volume:
